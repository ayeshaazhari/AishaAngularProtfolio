{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ContactComponent = class ContactComponent {\n  constructor() {\n    this.isSubmitting = false;\n    this.showSuccessMessage = false;\n    this.showErrorMessage = false;\n    this.formData = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      subject: '',\n      message: '',\n      projectType: ''\n    };\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      this.isSubmitting = true;\n      this.showSuccessMessage = false;\n      this.showErrorMessage = false;\n      // Simulate API call\n      setTimeout(() => {\n        this.isSubmitting = false;\n        this.showSuccessMessage = true;\n        // Reset form\n        form.reset();\n        this.formData = {\n          firstName: '',\n          lastName: '',\n          email: '',\n          subject: '',\n          message: '',\n          projectType: ''\n        };\n        // Hide success message after 5 seconds\n        setTimeout(() => {\n          this.showSuccessMessage = false;\n        }, 5000);\n      }, 2000);\n    } else {\n      // Mark all fields as touched to show validation errors\n      Object.keys(form.controls).forEach(key => {\n        form.controls[key].markAsTouched();\n      });\n    }\n  }\n};\nContactComponent = __decorate([Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})], ContactComponent);","map":{"version":3,"names":["Component","ContactComponent","constructor","isSubmitting","showSuccessMessage","showErrorMessage","formData","firstName","lastName","email","subject","message","projectType","onSubmit","form","valid","setTimeout","reset","Object","keys","controls","forEach","key","markAsTouched","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/ifazbeig/Downloads/angularProtfolio/angular-portfolio/src/app/components/contact/contact.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\ninterface ContactForm {\n  firstName: string;\n  lastName: string;\n  email: string;\n  subject: string;\n  message: string;\n  projectType: string;\n}\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent {\n  isSubmitting = false;\n  showSuccessMessage = false;\n  showErrorMessage = false;\n  \n  formData: ContactForm = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    subject: '',\n    message: '',\n    projectType: ''\n  };\n  \n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      this.isSubmitting = true;\n      this.showSuccessMessage = false;\n      this.showErrorMessage = false;\n      \n      // Simulate API call\n      setTimeout(() => {\n        this.isSubmitting = false;\n        this.showSuccessMessage = true;\n        \n        // Reset form\n        form.reset();\n        this.formData = {\n          firstName: '',\n          lastName: '',\n          email: '',\n          subject: '',\n          message: '',\n          projectType: ''\n        };\n        \n        // Hide success message after 5 seconds\n        setTimeout(() => {\n          this.showSuccessMessage = false;\n        }, 5000);\n        \n      }, 2000);\n    } else {\n      // Mark all fields as touched to show validation errors\n      Object.keys(form.controls).forEach(key => {\n        form.controls[key].markAsTouched();\n      });\n    }\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAiBlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAAtBC,YAAA;IACL,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,kBAAkB,GAAG,KAAK;IAC1B,KAAAC,gBAAgB,GAAG,KAAK;IAExB,KAAAC,QAAQ,GAAgB;MACtBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE;KACd;EAqCH;EAnCEC,QAAQA,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,IAAI,CAACZ,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,gBAAgB,GAAG,KAAK;MAE7B;MACAW,UAAU,CAAC,MAAK;QACd,IAAI,CAACb,YAAY,GAAG,KAAK;QACzB,IAAI,CAACC,kBAAkB,GAAG,IAAI;QAE9B;QACAU,IAAI,CAACG,KAAK,EAAE;QACZ,IAAI,CAACX,QAAQ,GAAG;UACdC,SAAS,EAAE,EAAE;UACbC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE,EAAE;UACTC,OAAO,EAAE,EAAE;UACXC,OAAO,EAAE,EAAE;UACXC,WAAW,EAAE;SACd;QAED;QACAI,UAAU,CAAC,MAAK;UACd,IAAI,CAACZ,kBAAkB,GAAG,KAAK;QACjC,CAAC,EAAE,IAAI,CAAC;MAEV,CAAC,EAAE,IAAI,CAAC;KACT,MAAM;MACL;MACAc,MAAM,CAACC,IAAI,CAACL,IAAI,CAACM,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,IAAG;QACvCR,IAAI,CAACM,QAAQ,CAACE,GAAG,CAAC,CAACC,aAAa,EAAE;MACpC,CAAC,CAAC;;EAEN;CACD;AAjDYtB,gBAAgB,GAAAuB,UAAA,EAL5BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW1B,gBAAgB,CAiD5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}